base = {"op":2,"d":"","s":null,"t":null}
// base packet
window "dimensions" 1000 600
properties = {"$os":"originOS","$browser":"originOS","$device":"originOS"}
properties."$browser" = system_browser.destr
properties."$device" = system_os.destr
// get system properties
loaded = []
d = {"token":"","intents":4194303}
d.properties = properties

proxy = "https://apps.mistium.com/cors?url="

message_rightclick = {}

def "connect" (
  discord = "gateway.discord.gg/?v=9&encoding=json:443".newWebsocket()
)

def "login" "token" (
  temp = base
  status = "online"
  dat = d
  dat.token = token.destr
  temp.d = dat
  discord.wsSend(temp)
  heartbeat_msg = {"op":1,"d":null}
  last_heartbeat = timer + 41.25
)

def "setStatus" "type,title" (
  status = {
    "op": 3,
    "d": {
      "since": null,
      "activities": [{
        "name": "originCord",
        "type": 0
      }],
      "status": "online",
      "afk": false
    }
  }

  discord.wsSend(status)
)

def "heartbeat" (
  if last_heartbeat < timer (
    last_heartbeat = timer + 41.25
    discord.wsSend(heartbeat_msg)
  )
)

def "send_file" "this.content, this.channel, this.file_name, this.file_content" (
  obj = {}
  obj.channelid = this.channel
  obj.content = this.content
  obj.filename = this.file_name
  obj.token = token
  obj.dataURI = this.file_content.makeUrl("text/plain")
  this.url = "https://proxy.milosantos.com/turbowarpbot/sendfile.php?filename=" ++ this.file_name
  this.out = this.url.http("POST",obj,{})
)

def "dm_user" "content, user_id" (
  channel = ("https://apps.mistium.com/create-dm-channel?userid=" ++ user_id ++ "&token=" ++ token).get()
  send_message content channel
)

import as "window_tools"
import as "glass" from "packages"

round_pfp = "w 2 line 11 11 11 -11 cont -11 -11 cont -11 11 cont 11 11 cutcircle 9 9 2 4. 45 cutcircle 9 -9 2 13.5 40 cutcircle -9 9 2 -4.5 45 cutcircle -9 -9 2 -13.5 45"
circle_pfp = "@dynamic s = 20 d = 17 -d = -17 w 3 cutcircle 0 0 17 0 180 w 3.5 cutcircle 0 0 @s 4.5 10 cutcircle 0 0 @s 13.5 10 cutcircle 0 0 @s 22.5 10 cutcircle 0 0 @s 31.5 10 line @d @d @d @-d cont @-d @-d cont @-d @d cont @d @d"

originCord_icn = "c #5865f2 w 20 dot 0 0 c #fff w 3 line 3 2 5 -2 cont 3 -3 cont 2 -2 cont -2 -2 cont -3 -3 cont -5 -2 cont -3 2.5 cont -2 2.5 cont -1 1.7 cont 1 1.7 cont 2 2.5 cont 3 2.5 w 4.5 line -2 0 2 0 c #5865f2 w 2.5 dot 2 -1 dot -2 -1"

window_tools:seticon originCord_icn
permission "request" "notifications"
permission "request" "file admin"

save "originCord@mistium" "set_directory"

contents = saveContents()

if contents.len > 1 (
  cur_file = "What Token File To Use?".ask() ++ ".txt"
  token_in = cur_file.saveGet()
) else (
  if "token.txt".saveExists() (
    token_in = "token.txt".saveGet()
  ) else (
    token_in = "Enter A Discord Bot Token".ask()
    if token_in != "" (
      save "token.txt" "set" token_in.toStr()
    ) else (
      window "stop"
    )
  )
)
def "disc_connect" (
  connect
  wait 1
  login token_in
  activity_data = [{"name":"originCord","type":1}]
)

messages = {}
edits = {}
previous_author = {}

def "async_msg" "content, channel" (
  link = "https://apps.mistium.com/send-discord-message?token=" ++ token ++ "&channelid=" ++ channel ++ "&content=" ++ encodeURIComponent(content.toStr())
  this.result = link.getAsync()
)

def addAttachment(attachment,height) (
  this.app = height.newArray() ++ [["","","","",""]] ++ height.newArray()
  attachment.content_height = height
  this.app[height+1][5] = attachment
  return this.app
)

def makepfp(this.aut) (
  pfp = proxy
  this.av = this.aut.avatar
  if this.av == "" (
    pfp = "https://raw.githubusercontent.com/Mistium/apps/main/all/origincord/assets/no-pfp.jpg"
  ) else (
    pfp += encodeURIComponent("https://cdn.discordapp.com/avatars/" ++ this.aut.id ++ "/" ++ this.av ++ ".png?size=64")
  )
  return pfp
)

def "handle_message" "msg, ping" (
  if msg.istype("object") (
    author = msg.author
    member = current_members[author.id]
    type = msg["type"]
  
    msg_cha = messages[channel]
  
    if msg_cha.istype("Array").not (
      messages[channel] = []
      msg_cha = []
    )
  
    name = member.nick
    name ??= author.global_name
    name ??= author.username
 
    content = msg.content
    attachments = msg.attachments
    each mention msg.mentions (
      content.replace("<@" ++ mention.id ++ ">","@" ++ mention.username)
    )
    pfp = proxy
    if member.avatar != "" (
      pfp += "https://cdn.discordapp.com/guilds/" ++ current_guild[4] ++ "/users/" ++ author.id ++ "/avatars/" ++ member.avatar ++ ".png?size=64"
    ) else (
      pfp = makepfp(author)
    )
    authid = author.id
    isreply = type == 19
    
    if isreply (
      referenced = msg.referenced_message
      message = [""]
      message.append(referenced.author.username + referenced.content)
      message.append("reply")
      message.append(false)
      msg_cha.append(message)
      authid = ""
    )
    if previous_author[channel] != authid or isreply (
      msg_cha.append("")
      previous_author[channel] = authid
      message = []
      if type == 7 (
        message.append("Welcome: " ++ name)
      ) else (
        message.append(name)
      )
      message.append("")
      message.append(pfp)
      message.append(false)
      message.append("")
      msg_cha.append(message)
    )
    if content.len > 0 (
      content.split(newline)
      each item content (
        item.strip()
        emoji_match = item.regex("/^<a?:[^:]+:(\d+)>$/")
        if emoji_match.len > 0 (
          att = {}
          att.url = "https://media.discordapp.net/emojis/" ++ emoji_match[1].regex("/\d+(?=>)/")[1] ++ ".png?size=64&quality=lossless"
          msg_cha = msg_cha ++ addAttachment(att,1)
        ) else (
          message = [""]
          message.append(item)
          message.append("")
          message.append(ping)
          message.append("")
          msg_cha.append(message)
        )
      )
    )
    for i attachments.len (
      msg_cha = msg_cha ++ addAttachment(attachments[i],5)
    )
    stickers = msg.sticker_items
    if stickers.len > 0 (
      att = {}
      att.url = "https://media.discordapp.net/stickers/" ++ stickers[1].id ++ ".png?size=240&quality=lossless"
      msg_cha = msg_cha ++ addAttachment(att,3)
    )
    messages[channel] = msg_cha
  )
)

def "draw_guilds" (
  c window_colour
  len = guilds.len
  frame window.left window.top - 40 window.left + 47 window.bottom len - 0.5 * 50 "guild"
  count = scroll_yguild // 50
  loop (window_height // 50).clamp(0,len) (
    count ++
    y = count - 0.5 * -50 + scroll_yguild
    guild = guilds[count]
    loc 999 2 0 y
    if guild == current_guild (
      square 30 30 15 : c#seco
      new_messages[guild[4]] = false
    ) else (
      square 40 40 10 0 1
      if clicked (
        current_guild = guild
        current_roles = roles[guild[4]].getKeys("id")
        current_members = guild[7]
      )
    )
    image guild[2] 40 40
    icon circle_pfp 1.3 : c#window_colour
    if guild == current_guild (
      icon "w 1.5 cutcircle 0 0 17 0 180" 1.3 : c#seco
    )
    if new_messages[guild[4]] == true (
      icon "w 1.5 cutcircle 0 0 17 0 180" 1.3 : c#txtc
    )
    c window_colour
  )
  frame "clear"
)

def "draw_channels" "cur" (
  c prim
  len = cur.len
  this.ih = 45
  
  frame window.left + 50 guild_info_shift window.left + 360 window.bottom + 50 len - 0.5 * this.ih "channels"
    count = scroll_ychannels // this.ih
    w = frame.width - 25
    y = scroll_ychannels % this.ih + (this.ih * 0.5 - 5)
  
    loop (window_height // this.ih).clamp(0,len) (
      count ++
      chnl = cur[count]
      if chnl.istype("object").not (
        chnl = {}
      )
      y -= this.ih
      loc 999 2 0 y
    
      id = chnl.id
      if id != "" (
        if chnl["type"] !== 4 (
          if current_channel == id (
            square w 25 15 : c#seco
           square w 25 10 : c#window_colour
          ) else if new_messages[id] == true (
            square w 25 15 : c#txtc
            square w 25 10 : c#window_colour
          ) else (
            square w 25 15 : c#window_colour
          )
          if clicked or current_channel == id (
            current_channel = id
            new_messages[id] = false
            if loaded.contains(id).not (
              link = "https://apps.mistium.com/get-discord-messages?channelid=" ++ id ++ "&token=" ++ token
              data = link.getAsync()
              c txtc
              set_x frame.right - 30
              direction timer * 200
              icon "w 3 cutcircle 0 0 10 0 50" 1
              direction 90
              if data != "Loading" (
                data = data.JsonClean().reverse()
                channel = id
                typing = {}
                each load_msg data (
                  handle_message load_msg false
                )
                loaded.append(id)
              )
            )
            ping_channels.delete(id)
          )
          if typing[id].len > 0 (
            this.pos = def(this.x) -> (
              return ((timer + this.x * 300).sin * 10)
            )
            loc -2 2 -20 y + this.pos(0)
            icon "w 4 dot 0 0" 1 : c#txtc
            loc -2 2 -30 y + this.pos(5)
            icon "w 4 dot 0 0" 1
            loc -2 2 -40 y + this.pos(10)
            icon "w 4 dot 0 0" 1
          )
        )
      )
      loc 2 2 20 y
      c txtc
      switch chnl["type"] (
        case 0
          text "#" 15 : chx#-7
          change_x 5
          break
        case 2
          icon "microphone" 0.7 : chx#0.2
          change_x 10
          break
        case 5
          icon "send" 0.7 : chx#0.2
          change_x 10
        default
          break
      )
      text chnl.name 10 : c#txtc
    )
  frame "clear"
)

def "draw_chat" "cur_msgs" (
  c prim
  len = cur_msgs.len
  input_offset = 40
  this.ih = 25
  frame window.left + 360 window.top - 40 window.right - 300 window.bottom + attachment_offset len * this.ih "chat"
  count = scroll_ychat // this.ih
  y = scroll_ychat % this.ih
  
  w = frame.width
  loop (window_height // this.ih).clamp(0,len) (
    count ++
    msg = cur_msgs[count]
    loc 999 2 0 y
    if msg[4] == true (
      square w 20 0 : c#625228
    ) else (
      square w 20 0 0 1
    )
    hover = mouse_touching
    if hover and msg != "" (
      square w 20 0 0 : c#prim
    )
    loc 2 2 20 y
    this.txt = msg[2].trimText(w / 10 - 2)
    c txtc
    if msg[3] == "reply" (
      change 5 -25
      icon "w 2 line -5 -10 -5 -5 cutcircle -1 -4 4 -4.5 45 cont 10 0" 1
      text this.txt == " " ? "Message Not Found" "reply -> " ++ this.txt 9 : chx#20
    ) else if msg[1] != "" (
      image msg[3] 29 29
      text msg[1] 10 : chx#20 c#txtc
    ) else (
      change_x 20
      text this.txt 9
      if msg[5].isType("object") (
        this.h = this.ih * msg[5].content_height * 2 + 10
        url = proxy ++ encodeURIComponent(msg[5].url)
        aspect_ratio = url.imageinfo("width") / url.imageinfo("height")
        loc 2 2 40 + (aspect_ratio * this.h / 2) y
        image url this.h * aspect_ratio this.h
      )
    )
    y -= this.ih
  )
  frame "clear"
)

def "draw_members" "cur_mem" (
  c prim
  len = cur_mem.len
  this.ih = 35
  frame window.right - 300 window.top - 40 window.right window.bottom + attachment_offset len - 0.5 * this.ih "members"
  
  count = scroll_ymembers // this.ih
  y = scroll_ymembers % this.ih - (this.ih / 2)
  
  w = frame.width
  loop (window_height // this.ih).clamp(0,len) (
    count ++
    mem = cur_mem[count].user
    loc 999 2 0 y
    square w 20 10 : c#window_colour
    loc 2 2 30 y
    image makepfp(mem) 30
    text mem.global_name ?? mem.username 10 : c#txtc chx#20
    y -= this.ih
  )
  frame "clear"
)

guilds = []
new_messages = {}
all_messages = {}
typing = {}
stickers = []

current_channel = ""
current_attachment = ""
attachment_offset = 40

disc_connect
setStatus "online" "originCord"

guild_info_shift = 0

roles = {}

mainloop:

window_tools:load_theme

heartbeat
if discord.wsOpen().not (
  guilds = []
  new_messages = []
  loaded = []
  all_messages = {}
  disc_connect
)

if discord.wsHasnew() (
  msg = discord.wsGetnext()
  cmd = msg.t
  dat = msg.d
  switch cmd (
    case "ready"
      discord_user = dat.user
      discord_id = discord_user.id
      discord_pfp = proxy ++ "https://cdn.discordapp.com/avatars/" ++ discord_id ++ "/" ++ discord_user.avatar ++ ".png"
      discord_username = discord_user.username
      break
    case "GUILD_CREATE"
      categories = {}
      roles[dat.id] = dat.roles.sortBy("position").reverse()
      ping_channels = []
      guild_icon = proxy ++ encodeURIComponent("https://cdn.discordapp.com/icons/" ++ dat.id ++ "/" ++ dat.icon ++ ".png?size=64")
      
      members = {}
      each i member dat.members (
        members[member.user.id] = member
      )
      
      channels = dat.channels.sortBy("position")
      categories = {"null":[]}
      each channel channels (
        parent = channel.parent_id ?? "null"
        if channel.nsfw == "" (
          parent = channel.id
        )
        categories[parent] = (categories[parent] ?? []).append(channel)
      )
      
      channels = []
      each cat categories.getValues() (
        channels = channels ++ cat
      )
      temp = []
      temp.append(dat.name)
      temp.append(guild_icon)
      temp.append(channels)
      temp.append(dat.id)
      temp.append(dat.banner)
      temp.append(dat.member_count)
      temp.append(members.getValues())
      guilds.append(temp)
      
      stickers = stickers ++ dat.stickers
      break
    case "TYPING_START"
      channel = dat.channel_id
      if current_guild[4] == dat.guild_id (
        temp = dat.member.user
        obj = {}
        obj.name = temp.username
        obj.timestamp = dat.timestamp * 1000
        obj.user = temp.id
        
        typing[channel] ??= []
        
        typing[channel] = typing[channel].append(obj)
      )
      break
    case "MESSAGE_CREATE"
      channel = dat.channel_id
      content = dat.content
      author = dat.author
      ping = false
      pings = content.regex("/<@\d+>/gm")
      if pings.len > 0 (
        my_ping = "<@" ++ discord_id ++ ">"
        each i ping pings (
          if ping == my_ping (
            ping_loc = channels.getKeys("id").index(channel)
            notify "Pinged by" + author.username
            ping_repl = "@" ++ discord_username
            content.replace(my_ping,ping_repl)
            ping_channels.append(channel)
            ping = true
          )
        )
      )
      if typing[channel].getKeys("user").contains(author.id) (
        temp = typing[channel]
        id = author.id
        for i temp.len (; if temp[i].user == id (; temp.delete(i);i --; );)
        typing[channel] = temp
      )
      if current_channel == channel (
        scroll_framey_chat = 9999999999
      )
      handle_message dat ping
      new_messages[channel] = true
      new_messages[dat.guild_id] = true
      break
  )
  dat = null
  msg = null
)
if file_dropped != 0 (
  file "open" file_dropped
  temp = []
  temp.append(file[14])
  temp.append(file[4])
  temp.append(file[2] ++ file[1])
  current_attachment = temp
  
  file_dropped = 0
)

c window_colour
pen "size" window.width + window.height
pen "opacity" 60

glass:frame window.left + 50 window.top window.right window.bottom
goto 0 0
pen "down"
pen "up"
frame "clear"

frame window.left + 360 window.top window.right window.bottom
goto 0 0
pen "down"
pen "up"
frame "clear"

if current_attachment == "" (
  attachment_offset = 40
) else (
  attachment_offset = 200
  frame window.left + 360 window.bottom + 200 window.right window.bottom + 50
  goto 0 0
  c prim
  square frame.width - 25 frame.height - 25 15
  file "open" current_attachment[1] "onlyaccess"
  loc 2 2 30 -30
  file "render" 1.5 : c#txtc
  text current_attachment[3] 9 : c#txtc chx#30
  file "close"
  loc -2 2 -30 -30
  icon "close" 0.7
  if onclick (
    current_attachment = ""
  )
  frame "clear"
)
loc 999 2 0 -20
square window_width 30 10 : c#prim
loc 2 2 20 -20
icon originCord_icn 1
text "originCord" 10 : c#txtc chx#20

draw_guilds

current_guild_id = current_guild[4]

draw_channels current_guild[3]

guild_info_shift = window.top - (current_guild[5].len == 32 ? 260 110)

frame window.left + 50 window.top - 40 window.left + 360 guild_info_shift (
  goto 0 30

  if current_guild[5].len == 32 (
    image proxy ++ "https://cdn.discordapp.com/banners/" ++ current_guild_id ++ "/" ++ current_guild[5] ++ ".png?size=512" frame.width frame.height - 60
  )
  loc 2 -2 10 44
  text current_guild[1] 10 : c#txtc

  loc 2 -2 10 22
  text current_guild[6] + "members" 10
)

if current_channel != "" (
  current_typing = typing[current_channel]
  draw_chat messages[current_channel]
  draw_members current_guild[7]
) else (
  current_typing = []
)
loc 2 -2 205 25
square 300 30 10 : c#prim
change_x -135
if discord_pfp.startsWith("https://") (
  image discord_pfp 30 30
)
change_x 30
text discord_username 9 : c#txtc

w = window_width - 380

total_typing = current_typing.len
if total_typing > 0 (
  loc 999 -2 180 55
  square w 20 10 : c#prim
  loc 2 -2 380 55
  c txtc
  if total_typing < 4 (
    each i cur current_typing (
      if timestamp - cur.timestamp > 10000 (
        current_typing.delete(i)
        typing[channel] = current_typing
        i --
      )
    )
    text current_typing.getKeys("name").join(" and ") 8
  ) else (
    text "Several People" 8
  )
  text total_typing == 1 ? " Is Typing" " Are Typing" 8
)

loc 999 -2 180 25
c prim
square w 30 10
input w 30 "message"
import "win-buttons"
if "enter".isKeyDown() and input_message != "" (
  send = input_message
  spl = send.split(" ")
  if send.startsWith(".eval") (
    this.func = def() -> ()
    
    data = send.trim(7,-1)
    this.func.code = ("return " ++ data).oslCompile()
    
    async_msg data ++ " -> " ++ this.func() current_channel
    input_message = ""
    exit
  )
  if send.startsWith(".version") (
    async_msg "originCord v4.3" current_channel
    input_message = ""
    exit
  )
  if send.contains("@") (
    pings = send.regex("/@[^ ]+/g")
    ping_users = current_members.getValues().getKeys("user")
    ping_usernames = ping_users.getKeys("username")
    each ping pings (
      send.replace(ping,"<@" ++ ping_users[ping_usernames.index(ping.trim(2,-1))].id ++ ">")
    )
    ping_users = []
    ping_usernames = []
  )
  if current_attachment == "" (
    async_msg send current_channel
  ) else (
    send_file send current_channel current_attachment[3] current_attachment[2]
    current_attachment = ""
  )
  input_message = ""
)
