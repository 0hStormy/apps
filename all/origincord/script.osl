base = {
  "op":2,
  "d": {
    "token": "",
    "intents": 4194303,
    "properties": {
      "$os": "originOS",
      "$browser": system_browser.destr,
      "$device": system_os.destr
    }
  },
  "s":null,
  "t":null
}
// base packet
window "dimensions" 1000 600

origincord_logo = "c #5865f2 w 20 dot 0 0 c #fff w 3 line 3 2 5 -2 cont 3 -3 cont 2 -2 cont -2 -2 cont -3 -3 cont -5 -2 cont -3 2.5 cont -2 2.5 cont -1 1.7 cont 1 1.7 cont 2 2.5 cont 3 2.5 cont 5 -2 w 4.5 line -2 0 2 0 c #5865f2 w 2.5 dot 2 -1 dot -2 -1"

// get system properties
loaded = []

proxy = "https://apps.mistium.com/cors?url="

status_colours = {
  "online":"#23a55a",
  "idle":"f0b232",
  "dnd":"#f23f43",
  "offline":"#80848e"
}

// guilds
def "guild_copy_id" "this.guild" (; clipboard "set" this.guild.id ;)

guild_menu = [
  {"Copy Guild Id": "guild_copy_id"}
]

// Channels
def "channel_copy_id" "this.chnl" (; clipboard "set" this.chnl.id ;)

channel_menu = [
  {"Copy Channel Id": "channel_copy_id"},
]

// Messages
def "message_copy" "this.msg" (; clipboard "set" this.msg.content;)
def "message_reply" "this.msg" (; current_reply = this.msg;)

def "message_delete" "this.msg" (
  this.out = ("https://apps.mistium.com/discord-delete-message?channelid=" ++ current_channel ++ "&messageid=" ++ this.msg.id ++ "&token=" ++ token ++ "&user_account=" ++ discord_isUser).getAsync()
)

message_menu = [
  {"Copy Message Text": "message_copy"},
  {"Reply To Message": "message_reply"},
  {"Delete Message": "message_delete"}
]

def "user_dm" "this.user" (
  this.url = "https://apps.mistium.com/get-dm-channel?userid=" ++ this.user ++ "&token=" ++ token ++ "&user_account=" ++ discord_isUser
  current_channel = this.url.http("GET",{},{})
)

user_menu = [
  {"Message User": "user_dm"}
]

def "connect" (
  discord = "gateway.discord.gg/?v=9&encoding=json:443".newWebsocket()
)

def doProxy(this.url) (
  return proxy ++ encodeURIComponent(this.url)
)

def "login" "token" (
  status = "online"
  
  base.d.token = token.destr
  
  discord.wsSend(base)
  heartbeat_msg = {"op":1,"d":null}
  last_heartbeat = timer + 41.25
)

def "setStatus" "type,title" (
  status = {
    "op": 3,
    "d": {
      "since": null,
      "activities": [{
        "name": "originCord",
        "type": 0
      }],
      "status": "online",
      "afk": false
    }
  }

  discord.wsSend(status)
)

def "send_sticker" "this.sticker_id, this.channel" (
  this.api = "https://apps.mistium.com/send-discord-sticker?token=" ++ token ++ "&channelid=" ++ this.channel ++ "&stickerid=" ++ this.sticker_id ++ "&user_account=" ++ discord_isUser
  this.out = this.api.getAsync()
)

def "heartbeat" (
  if last_heartbeat < timer (
    last_heartbeat = timer + 41.25
    discord.wsSend(heartbeat_msg)
  )
)

def "send_file" "this.content, this.channel, this.file_name, this.file_content" (
  this.obj = {
    "channelid": this.channel,
    "content": this.content,
    "filename": this.file_name,
    "token": token
  }
  this.obj.dataURI = this.file_content.startsWith("data:") ? this.file_content this.file_content.makeUrl("text/plain")
  
  this.out = ("https://apps.mistium.com/upload-discord-file?user_account=" ++ discord_isUser).http("POST",this.obj,{"Content-Type":"application/json"})
)

import as "window_tools"
import as "glass" from "packages"

round_pfp = "w 2 line 11 11 11 -11 cont -11 -11 cont -11 11 cont 11 11 cutcircle 9 9 2 4. 45 cutcircle 9 -9 2 13.5 40 cutcircle -9 9 2 -4.5 45 cutcircle -9 -9 2 -13.5 45"
circle_pfp = "@dynamic s = 20 d = 17 -d = -17 w 3 cutcircle 0 0 17 0 180 w 3.5 cutcircle 0 0 @s 4.5 10 cutcircle 0 0 @s 13.5 10 cutcircle 0 0 @s 22.5 10 cutcircle 0 0 @s 31.5 10 line @d @d @d @-d cont @-d @-d cont @-d @d cont @d @d"

window_tools:seticon origincord_logo
permission "request" "notifications"
permission "request" "file admin"

save "originCord@mistium" "set_directory"

def "disc_connect" (
  connect
  wait 1
  login token_in
  activity_data = [{"name":"originCord","type":1}]
)

messages = {}
edits = {}
previous_author = {}

def "async_msg" "content, channel" (
  link = "https://apps.mistium.com/send-discord-message?token=" ++ token ++ "&channelid=" ++ channel ++ "&content=" ++ encodeURIComponent(content.toStr()) ++ "&user_account=" ++ discord_isUser
  this.result = link.getAsync()
)

def addAttachment(attachment,height) (
  this.app = height.newArray() ++ [["","","","","","",""]] ++ height.newArray()
  attachment.content_height = height
  attachment.url = doProxy(attachment.url)
  this.app[height+1][5] = attachment
  return this.app
)

def makepfp(this.aut) (
  this.av = this.aut.avatar
  if this.av == "" (
    return "https://raw.githubusercontent.com/Mistium/apps/main/all/origincord/assets/no-pfp.jpg"
  ) else ( 
    return doProxy("https://cdn.discordapp.com/avatars/" ++ this.aut.id ++ "/" ++ this.av ++ ".png?size=128")
  )
)

def "focusChannel" "this.id" (
  guilds_last_channels[current_guild[4] ?? "@me"] = guilds_last_channels
  current_channel = this.id
)

def makeSticker(this.id) (
  return "https://media.discordapp.net/stickers/" ++ this.id ++ ".png?size=240&quality=lossless"
)

def memFromId(this.id) (
  return current_members[current_member_ids.index(this.id)]
)

def "handle_message" "msg, ping" (
  if msg.istype("object") (
    member = memFromId(msg.author.id)
    type = msg["type"]
    msg.author = member.user
    
    msg_cha = messages[channel]
  
    if msg_cha.istype("Array").not (
      messages[channel] = []
      msg_cha = []
    )
  
    name = member.user.name
 
    content = msg.content
    attachments = msg.attachments
    authid = msg.author.id ++ "/" ++ msg.author.username
    isreply = type == 19
    
    if isreply (
      referenced = msg.referenced_message
      
      message = [""]
      message.append(memFromId(referenced.author.id).user.name + referenced.content.replace("\n"," "))
      message.append("reply")
      message.append(false)
      message.append("")
      message.append(msg)
      msg_cha.append(message)
      authid = ""
    )
    if previous_author[channel] != authid or isreply (
      msg_cha.append("")
      previous_author[channel] = authid
      message = []
      if type == 7 (
        message.append("Welcome: " ++ name)
      ) else (
        message.append(name)
      )
      message.append("")
      message.append("")
      message.append(false)
      message.append(member.user.colour ?? txtc)
      message.append(msg)
      msg_cha.append(message)
    )
    if content.len > 0 (
      content.split("\n")
      each item content (
        emoji_match = item.strip().match("/^<a?:[^:]+:(\d+)>$/")
        if emoji_match.len > 0 (
          att = {}
          att.url = "https://media.discordapp.net/emojis/" ++ emoji_match[2] ++ ".png?size=128&quality=lossless"
          att.filetype = "image"
          msg_cha = msg_cha ++ addAttachment(att,1)
        ) else (
          message = [""]
          cur_content = item.match("/<[^ >]+>|[^<>\[\]()]+|./gm")
          if cur_content.len == 1 (; cur_content = cur_content[1]; )
          message.append(cur_content)
          message.append("")
          message.append(ping)
          message.append("")
          message.append(msg)
          msg_cha.append(message)
        )
      )
    )
    each att attachments (
      att.filetype = att.content_type.split("/").first()
      msg_cha = msg_cha ++ addAttachment(att,5)
    )
    this.stickers = msg.sticker_items
    if this.stickers.len > 0 (
      att = {
        "url": makeSticker(this.stickers[1].id),
        "filetype": "image"
      }
      msg_cha = msg_cha ++ addAttachment(att,3)
    )
    messages[channel] = msg_cha
  )
)

def displayNameOf(this.user) (
  this._name = this.user.display_name
  this._name ??= this.user.global_name
  this._name ??= this.user.username
  return this._name
)

def "handle_guild" "dat" (
  roles[dat.id] @= dat.roles.sortBy("position").reverse()
  guild_icon = proxy ++ encodeURIComponent("https://cdn.discordapp.com/icons/" ++ dat.id ++ "/" ++ dat.icon ++ ".png?size=64")

  channels = dat.channels.sortBy("position")
  categories = {"null":[]}
  each channel channels (
    parent = channel.parent_id ?? "null"
    if channel.nsfw == "" (
      parent = channel.id
    )
    categories[parent] = (categories[parent] ?? []).append(channel)
  )

  channels = []
  each cat categories.getValues() (
    channels ++= cat
  )
      
  members = dat.members

  r2 = roles[dat.id]
  r3 = r2.getKeys("id")

  for i members.len (
    _dat = members[i]
    _name = _dat.nick
    _name ??= _dat.user.global_name
    _name ??= _dat.user.username

    members[i].user.name = _name

    r = _dat.roles
    out = r3.len + 1
    i2 = 0
    loop r.len (
      i2 ++
      role_id = r[i2]
      role_current = r3.index(role_id)
      if r2[role_current].color != 0 and out > role_current (
        out = role_current
      )
    )
    if out == r3.len + 1 (
      members[i].user.colour = ""
      members[i].user.role_name = ""
      members[i].order = 1
    ) else (
      members[i].user.colour = r2[out].color
      members[i].user.role_name = r2[out].name
      members[i].order = r2[out].position
    )
    
    members[i].user.pfp = makepfp(members[i].user)
  )
  members = members.sortBy("order").reverse()
  
  each presence dat.presences (
    presences[presence.user.id] = presence
  )
      
  this.arr = [
    dat.name,
    guild_icon,
    channels,
    dat.id,
    dat.banner,
    dat.member_count
  ]
  guilds.append(this.arr)

  all_members[dat.id] = members
  all_member_ids[dat.id] = members.getKeys("user").getKeys("id")
  stickers[dat.id] = dat.stickers
)

def "draw_guilds" (
  if window.width !> 700 (
    return
  )


  c window_colour
  len = guilds.len
  frame window.left window.top - 40 window.left + 47 window.bottom len - 0.5 * 50 "guild"
  count = scroll_yguild // 50
  loop (window.height // 50).clamp(0,len + 1) (
    count ++
    y = count - 0.5 * -50 + scroll_yguild
    guild @= guilds[count]
    guild_id = guild[4]
    loc 999 2 0 y
    if guild_id == current_guild[4] (
      square 30 30 15 : c#seco
      new_messages[guild_id] = false
    ) else (
      square 40 40 10 0 1
      if onclick (
        current_guild @= guild
        current_channel = guilds_last_channels[guild_id] ?? 0
        if guild != "@me" (
          current_roles @= roles[guild_id].getKeys("id")
          current_members @= all_members[guild[4]]
          current_member_ids @= all_member_ids[guild[4]]
        )
      )
    )
    if guild == "@me" (
      icon origincord_logo 2 
    ) else (
      image guild[2] 40 40
    )
    icon circle_pfp 1.3 : c#window_colour
    rightclick guild_menu guild
    if guild_id == current_guild[4] (
      icon "w 1.5 cutcircle 0 0 17 0 180" 1.3 : c#seco
    ) else if new_messages[guild_id] == true (
      icon "w 1.5 cutcircle 0 0 17 0 180" 1.3 : c#txtc
    )
    c window_colour
  )
  frame "clear"
)

def "draw_channels" (
  cur @= cur_channels
  c prim
  len = cur.len
  this.ih = 45
  
  frame window.left + 50 guild_info_shift window.left + 360 window.bottom + 50 len - 0.5 * this.ih "channels"
    count = scroll_ychannels // this.ih
    w = frame.width - 25
    y = scroll_ychannels % this.ih + (this.ih * 0.5 - 5)
  
    loop (window_height // this.ih).clamp(0,len) (
      count ++
      chnl @= cur[count]
      if chnl.istype("object").not (
        chnl = {}
      )
      y -= this.ih
      loc 999 2 0 y
   
      id = chnl.id
      this.current_channel = current_channel == id
      if id != "" (
        if chnl["type"] !== 4 (
          if this.current_channel (
            square w 25 15 : c#seco
            square w 25 10 : c#window_colour
          ) else if new_messages[id] == true (
            square w 25 15 : c#txtc
            square w 25 10 : c#window_colour
          ) else (
            square w 25 15 : c#window_colour
          )
          rightclick channel_menu chnl
          if onclick (
          
            if current_guild == "@me" (
              current_members @= chnl.recipients.append(discord_user).map(def(this.user) -> (
                this.user.pfp = makepfp(this.user)
                this.user.colour = txtc
                this.user.name = displayNameOf(this.user)
                return {"user": this.user}
              ))
              
              current_member_ids @= chnl.recipients.getKeys("id").append(discord_id)
            )
            focusChannel id
          )
          if typing[id].len > 0 (
            this.pos @= def(this.x) -> (
              return (timer + this.x * 300).sin() * 10
            )
            loc -2 2 -20 y + this.pos(0)
            icon "w 4 dot 0 0" 1 : c#txtc
            loc -2 2 -30 y + this.pos(5)
            icon "w 4 dot 0 0" 1
            loc -2 2 -40 y + this.pos(10)
            icon "w 4 dot 0 0" 1
          )
        )
      )
      loc 2 2 20 y
      c txtc
      switch chnl["type"] (
        case 0
          text "#" 15 : chx#-7
          change_x 5
          break
        case 1
          change_x 10
          image makepfp(chnl.recipients[1]) 30 30
          icon circle_pfp 0.975 : c#window_colour
          change_x 30
          break
        case 2
          icon "microphone" 0.7 : chx#0.2
          change_x 10
          break
        case 3
          if chnl.icon (
            change_x 10
            image doProxy("https://cdn.discordapp.com/channel-icons/" ++ id ++ "/" ++ chnl.icon ++ ".png?size=80") 30 30
            icon circle_pfp 0.975 : c#window_colour
            change_x 30
          ) else (
            text "#" 15 : chx#-7
            change_x 5
            break
          )
          break
        case 5
          icon "send" 0.7 : chx#0.2
          change_x 10
          break
        default
          break
      )
      text chnl.name 10 : c#txtc
    )
  frame "clear"
)

def "draw_chat" "cur_msgs" (
  local left = window.left
  local top = window.top
  local right = window.right
  if window.width > 700 (
    local left += 360
    local top -= 40
    local right -= shown.sidebar ? 300 30
  )
  
  
  local bottom = window.bottom + attachment_offset

  c prim
  len = cur_msgs.len
  input_offset = 40
  this.ih = 25
  frame left top right bottom len * this.ih "chat"
  chat_frame = frame
  count = scroll_ychat // this.ih
  y = scroll_ychat % this.ih
  
  w = frame.width
  loop (window_height // this.ih).clamp(0,len + 1) (
    count ++
    msg @= cur_msgs[count]
    loc 999 2 0 y
    if msg[4] == true (
      square w 20 0 : c#625228
    ) else (
      square w 20 0 0 1
    )
    msg_data = msg[6]
    author @= msg_data.author
    hover = mouse_touching
    if hover and msg_data.content != "" (
      rightclick message_menu msg_data
    )
    msg_c = txtc
    if deleted_messages.contains(msg_data.id) (
      msg_c = #f23f43
    )
    
    loc 2 2 40 y
    this.txt = msg[2].trimText(w / 10 - 2)
    c msg_c
    if msg[3] == "reply" (
      change -5 -25
      icon "w 2 line -5 -10 -5 -5 cutcircle -1 -4 4 -4.5 45 cont 10 0" 1
      text this.txt == " " ? "Message Not Found" "reply -> " ++ this.txt 9 : chx#20
    ) else if msg[1] != "" (
      change -10 -10
      image author.pfp 40 40
      icon circle_pfp 1.3 : c#window_colour
      change 30 10
      text author.name 10 : c#author.colour
      rightclick user_menu author.id
    ) else (
      change_x 20
      if msg[2].isType("Array") (
        this.txt = msg[2]
        each i this.txt (
          if i[1] == "<" (
            switch i[2] (
              case "@"
                member = memFromId(i.trim(3,-2)).user
                i = "@" ++ member.name
                change_x i.len * 5
                square i.len * 10 20 10 : c#prim
                change_x i.len * -5
                c member.colour ?? txtc
                text i 10
                c msg_c
                break
              case ":"
                change_x 10
                i = i.trim(3,-2)
                
                image doProxy("https://media.discordapp.net/emojis/" ++ i.trim(i.index(":") + 1,-1) ++ ".png?size=64&quality=lossless") 20 20
                change_x 10
                break
            )
          ) else (
            text i 10
          )
        )
      ) else (
        text this.txt 10
      )
      if msg[5].isType("object") (
        att @= msg[5]
        file_type = att.filetype
        this.h = this.ih * att.content_height * 2 + 10
        url = att.url
        switch file_type (
          case "image"
            aspect_ratio = url.imageinfo("width") / url.imageinfo("height")
            loc 2 2 60 + (aspect_ratio * this.h / 2) y
            image url this.h * aspect_ratio this.h
            break
          case "video"
            aspect_ratio = url.videoinfo("width") / url.videoinfo("height")
            this.h -= 20
            this.w = this.h * aspect_ratio
            loc 2 2 60 + (this.w / 2) y + 10
            video url this.w this.h
            change_y this.h / -2 - 20
            square this.w - 10 20 10 : c#prim
            change_x this.w / -2 + 20
            c txtc
            if url.videoinfo("playing") (
              icon "pause" 0.7
              if onclick (
                video url "pause"
              )
            ) else (
              icon "play" 0.7
              if onclick (
                video url "play"
              )
            )
            break
        )
      )
    )
    y -= this.ih
  )
  frame "clear"
)

def "draw_members" "cur_mem" (
  this.ih = 35
  sidebar_ih = 35
  len = current_member_ids.len
  sidebar_len = len

  count = max(0, scroll_ymembers // this.ih)
  y = scroll_ymembers % this.ih - (this.ih / 2)
  
  last_rolename = ""
  w = frame.width
  loop (window_height // this.ih).clamp(0,len) (
    count ++
    mem @= cur_mem[count].user
    if mem.role_name != last_rolename (
      c mem.colour ?? txtc
      last_rolename = mem.role_name
      loc 2 2 20 y
      text last_rolename 10
      y -= this.ih
    )

    local presence = presences[mem.id]
    
    loc 999 2 0 y
    square w 20 10 : c#window_colour
    rightclick user_menu mem.id
    
    loc 2 2 30 y
    image makepfp(mem) 30 30
    icon circle_pfp 0.9 : c#window_colour
    change 10 -10
    c status_colours[presence.status]
    square 5 5 5
    change -10 10
    c mem.colour ?? txtc
    if presence.activities > 0 (
      change_x 20
      local types = ["Playing","Streaming","Listening to","Watching","Custom"]
      local x = x_position
      local activity = presence.activities[1]
      change_y 5
      text mem.name 10
      set_x x : chy#-15
      if activity["type"] == 4 (
        activity.name = activity.state
      ) else (
        activity.name = types[activity["type"]+1] + activity.name
      )
      text activity.name.trimText(30) 8
    ) else (
      text mem.name 10 : chx#20
    )
    
    y -= this.ih
  )
)

def "draw_stickers" "cur_stickers" (
  this.ih = 100
  sidebar_ih = 100
  cur_stickers @= cur_stickers[current_guild[4]]
  
  len = cur_stickers.len
  sidebar_len = len
  count = scroll_ystickers // this.ih
  y = scroll_ystickers % this.ih - (this.ih / 2)
  
  w = frame.width
  loop (window_height // this.ih).clamp(0,len) (
    count ++
    this.stk @= cur_stickers[count]
    loc 999 2 0 y
    square w 100 10 : c#window_colour
    if mouse_touching (
      square w 100 10 : c#prim
      if onclick (
        send_sticker this.stk.id current_channel
      )
    )
    loc 2 2 60 y
    image makeSticker(this.stk.id) 100 100
    text this.stk.name 10 : c#txtc chx#55
    y -= this.ih
  )
)


def "draw_sidebar" (
  if window.width !> 700 (
    return
  )

  w = window
  
  frame w.right - (shown.sidebar ? 300 30) w.top - 40 w.right w.top - 80
    loc 2 999 20 0
    c txtc
    if shown.sidebar (
      icon "left" 0.8
    ) else (
      icon "right" 0.8
    )
    if onclick (
      shown.sidebar = shown.sidebar.not()
    )
    
    if shown.sidebar (
      text "Members" 10 : chx#20
      if onclick (
        sidebar_mode = "members"
      )
      text "Stickers" 10 : chx#20
      if onclick (
        sidebar_mode = "stickers"
      )
    )
  frame "clear"
  if !shown.sidebar (
    return
  )
  c seco
  frame w.right - 300 w.top - 80 w.right w.bottom sidebar_len - 0.5 * sidebar_ih sidebar_mode
  switch sidebar_mode (
    case "members"
      draw_members current_members
      break
    case "stickers"
      draw_stickers stickers
      break
    default
      sidebar_mode = "members"
      break
  )
  frame "clear"
)

loaded_cord = false

def "setup" (
  guilds = []
  new_messages = {}
  all_messages = {}
  typing = {}
  stickers = {}
  guilds_last_channels = {}

  current_channel = ""
  current_attachment = ""
  current_reply = ""
  attachment_offset = 40
  current_guild = ""
  
  shown = {
    "sidebar": true,
    "channels": true
  }

  disc_connect
  // setStatus "online" "originCord"

  guild_info_shift = 0

  roles = {}
  member_search = {}
  all_members = {}
  all_member_ids = {}
  current_members = []
  mention_picker = {}

  presences = {}
  deleted_messages = []
  
  loaded_cord = true
)

mainloop:

window_tools:load_theme

c window_colour
pen "size" window.width + window.height
pen "opacity" 60

glass:frame window.left + 50 window.top window.right window.bottom
goto 0 0
pen "down"
pen "up"
frame "clear"

frame window.left + 360 window.top window.right window.bottom
goto 0 0
pen "down"
pen "up"
frame "clear"

if loaded_cord.not (
  
  contents = saveContents().JsonParse()
  
  goto 0 window.top - 20
  square window.width 40 10 : c#prim
  loc 2 2 20 -20
  text "OriginCord - Pick A Token" 10 : c#txtc
  frame window.left + 360 window.top - 50 window.right window.bottom contents.len * 50
    y = 25
    each token_file contents (
      goto -25 frame.top - y
      square frame.width - 80 30 10 : c#prim
      if mouse_touching (
        square frame.width - 80 30 10 : c#seco
        square frame.width - 80 30 5 : c#prim
        if onclick (
          token_in = token_file.saveGet()
          setup
        )
      )
      change_x frame.width / -2 + 45
      text token_file.split(".").first() 10 : c#txtc
      goto frame.width / 2 - 30 frame.top - y
      square 30 30 10 : c#prim
      icon "bin" 0.8 : c#txtc
      if onclick (
        save token_file "delete"
      )
      y += 50
    )
  frame "clear"
  
  frame window.left + 50 window.top - 50 window.left + 360 window.bottom (
    loc 2 2 10 -20
    text "Add Token (Only works with bots)" 9 : c#txtc
    
    goto 0 window.top - 80
    square frame.width - 30 25 10 : c#prim
    input frame.width - 35 25 "token_name" "Token Name..."
    
    goto 0 window.top - 120
    square frame.width - 30 25 10 : c#prim
    input frame.width - 35 25 "token_data" "Bot Token..."
    
    goto 0 window.top - 160
    if input_token_data != "" and input_token_name != "" (
      c seco
    ) else (
      c prim
    )
    square frame.width - 30 25 10
    if onclick (
      save input_token_name ++ ".txt" "set" input_token_data
      input_token_data = ""
      input_token_name = ""
    )
    change_x frame.left + 30
    icon "add" 0.5 : c#txtc
    text "Add Token" 9 : chx#15
  )
  
  import "win-buttons"
  exit
)

heartbeat
if discord.wsOpen().not (
  loaded_cord = false
  say "Failed/Lost Websocket Connection, Check Your Token Is Correct"
)

if discord.wsHasnew() (
  msg = discord.wsGetnext()
  cmd = msg.t
  dat = msg.d
  switch cmd (
    case "ready"
      discord_user = dat.user
      discord_id = discord_user.id
      discord_pfp = proxy ++ "https://cdn.discordapp.com/avatars/" ++ discord_id ++ "/" ++ discord_user.avatar ++ ".png"
      discord_username = discord_user.username
      discord_isUser = (dat.user.bot != true).toNum()
      
      if discord_isUser == 1 (

        discord_dms @= dat.private_channels
        current_guild = "@me"
        
        for i discord_dms.len (
          _dat @= discord_dms[i]
          discord_dms[i].last_message_id = discord_dms[i].last_message_id.toNum()
          if _dat["type"] == 1 (
            discord_dms[i].name = displayNameOf(_dat.recipients[1])
          )
          if _dat["type"] == 3 and discord_dms[i].name == null (
            _name = ""
            each name _dat.recipients (
              _name += displayNameOf(name) ++ ", "
            )
            discord_dms[i].name = _name.trim(1,-3)
          )
        )
        
        
        discord_dms.sortBy("last_message_id")
        discord_dms.reverse()
       
        local current_guilds = dat.guilds
        guilds.append("@me")
        each guild current_guilds (
          handle_guild guild
        )
      )
      break
    case "GUILD_CREATE"
      handle_guild dat
      break
    case "TYPING_START"
      channel = dat.channel_id
      temp = dat.member.user
      obj = {
        "name": displayNameOf(nick),
        "user": temp.id
      }
        
      obj.timestamp = dat.timestamp * 1000
        
        
      typing[channel] ??= []
        
      typing[channel] = typing[channel].append(obj)
      break
    case "MESSAGE_CREATE"
      channel = dat.channel_id
      content = dat.content
      author = dat.author
      if typing[channel].getKeys("user").contains(author.id) (
        temp = typing[channel]
        id = author.id
        for i temp.len (; if temp[i].user == id (; temp.delete(i);i --; );)
        typing[channel] = temp
      )
      if current_channel == channel (
        scroll_framey_chat = 9999999999
      )
      handle_message dat ping
      
      new_messages[channel] = true
      new_messages[dat.guild_id] = true
      break
    case "MESSAGE_DELETE"
      deleted_messages.append(dat.id)
      break
    case "MESSAGE_ACK"
      new_messages[dat.channel_id] = false
      break
    case "PRESENCE_UPDATE"
      if dat.status == "offline" (; dat.status = ""; )
      presences[id].status = dat
      break
    case "GENERIC_PUSH_NOTIFICATION_SENT"
      notify dat.title
      break
    case "MESSAGE_REACTION_ADD"
      break
    case "CHANNEL_UNREAD_UPDATE"
      each this.channel dat.channel_unread_updates (
        new_messages[this.channel.id] = true
        new_messages[dat.guild_id] = true
      )
      break
    case "SESSIONS_REPLACE"
      presences[discord_id] = []
      for i dat (
        presences[discord_id] ++= dat[i]
      )
      break
  )
  dat = null
  msg = null
)
if file_dropped != 0 (
  file "open" file_dropped "onlyaccess"
  current_attachment = [
    fileGet(14),
    fileGet(4)
  ]
  current_attachment.append(fileGet(2) ++ fileGet(1))
  
  file_dropped = 0
)

if current_channel != "" (
  new_messages[current_channel] = false
  if loaded.contains(current_channel).not (
    data = ("https://apps.mistium.com/get-discord-messages?channelid=" ++ current_channel ++ "&token=" ++ token ++ "&user_account=" ++ discord_isUser).getAsync()
    
    goto 0 0
    direction timer * 200
    icon "w 3 cutcircle 0 0 10 0 50" 1 : c#txtc
    direction 90
    if data != "Loading" (
      data @= data.JsonClean().reverse()
      channel = current_channel
      typing = {}
      each load_msg data (
        handle_message load_msg false
      )
      loaded.append(current_channel)
      data = ""
    )
  )
  clicked = false
  
  current_typing = typing[current_channel]
  draw_chat messages[current_channel]
) else (
  current_typing = []
)

draw_sidebar

f = chat_frame
x = f.x - window.x
y = f.y - window.y

mention_picker.match = input_message.match("/(?:[^<]|^)@([^ ]+)/")
if mention_picker.match.len > 0 (
  attachment_offset = 400
  frame f.left + x window.bottom + 400 f.right + x window.bottom + 55
  goto 0 0
  square frame.width - 25 frame.height - 25 15 : c#prim
  
  if mention_picker.temp != mention_picker.match[2] (
    mention_picker.temp = mention_picker.match[2]
    mention_list = []
    mention_users @= current_members.getKeys("user")
    
    i = 0
    while i < mention_users.len and mention_list.len < 7 (
      i ++
      _name = mention_users[i].name
      if _name.contains(mention_picker.temp) (
        arr = [
          _name,
          makepfp(mention_users[i]),
          mention_users[i].id,
        ]
        arr.append(mention_users[i].colour ?? txtc)
        mention_list.append(arr)
      )
    )
  )
  
  loc 2 2 30 -30
  c txtc
  each i mention_list (
    set_x 0
    square frame.width - 30 30 10 : c#window_colour
    if mouse_touching (
      square frame.width - 30 30 5 : c#prim
      if onclick (
        input_message.replace("/(?:[^<]|^)@([^ ]+)/","<@" ++ i[3] ++ ">")
      )
    )
    set_x frame.left + 30
    image i[2] 20 20
    text i[1] 10 : chx#20 c#i[4]
    change_y -47.5
  )

  frame "clear"
) else if current_reply != "" (
  attachment_offset = 70
  frame f.left + x window.bottom + 90 f.right + x window.bottom + 45
  member = memFromId(current_reply.author.id)
  goto 0 0
  square frame.width - 25 frame.height - 25 15 : c#prim
  set_x frame.left + 20
  text "Replying to " 9 : c#txtc
  c member.user.colour ?? txtc
  text member.user.name 9
  set_x frame.right - 20
  icon "close" 0.7 : c#txtc
  if onclick (
    current_reply = ""
  )
  frame "clear"
) else if current_attachment != "" (
  attachment_offset = 200
  frame f.left + x window.bottom + 200 f.right + x window.bottom + 55
  goto 0 0
  square frame.width - 25 frame.height - 25 15 : c#prim
  file "open" current_attachment[1] "onlyaccess"
  loc 2 2 30 -30
  file "render" 1.5 : c#txtc
  text current_attachment[3] 9 : c#txtc chx#30
  file "close"
  loc -2 2 -30 -30
  icon "close" 0.7
  if onclick (
    current_attachment = ""
  )
  frame "clear"
) else (
  attachment_offset = 40
)
loc 999 2 0 -20
square window_width 30 10 : c#prim
loc 2 2 20 -20
icon origincord_logo 1
text "originCord" 10 : c#txtc chx#20

if window.width 
draw_guilds

current_guild_id = current_guild[4]

if shown.channels and window.width > 700 (
  if current_guild == "@me" (
    cur_channels @= discord_dms
  ) else (
    cur_channels @= current_guild[3]
  )
  draw_channels

  guild_info_shift = window.top - (current_guild[5].len == 32 ? 260 110)

  frame window.left + 50 window.top - 40 window.left + 360 guild_info_shift (
    if current_guild != "" (
      goto 0 30

      if current_guild[5].len == 32 (
        image proxy ++ "https://cdn.discordapp.com/banners/" ++ current_guild_id ++ "/" ++ current_guild[5] ++ ".png?size=512" frame.width frame.height - 60
      )
      loc 2 -2 10 44
      text current_guild[1] 10 : c#txtc

      loc 2 -2 10 22
      text current_guild[6] + "members" 10
    ) else (
      loc 2 2 10 -20
      text "Select A Guild To View Channels" 9 : c#txtc
    )
  )

  loc 2 -2 205 25
  square 300 30 10 : c#prim
  change_x -135
  if discord_pfp.startsWith("https://") (
    image discord_pfp 30 30
    icon circle_pfp 0.925
  )
  change_x 30
  text discord_username 9 : c#txtc
  
  loc 2 -2 340 25
  icon "close" 0.7
  if onclick (
    loaded_cord = false
    discord.wsClose()
  )
)

w = chat_frame.width - 25

total_typing = current_typing.len
if total_typing > 0 (
  goto x window.bottom + 55
  square w 20 10 : c#prim
  change_x w / -2 + 20
  c txtc
  if total_typing < 4 (
    each i cur current_typing (
      if timestamp - cur.timestamp > 10000 (
        current_typing.delete(i)
        typing[channel] = current_typing
        i --
      )
    )
    text current_typing.getKeys("name").join(" and ") 8
  ) else (
    text "Several People" 8
  )
  text total_typing == 1 ? " Is Typing" " Are Typing" 8
)

goto x window.bottom + 25
c prim
square w 30 10
input w 30 "message"
import "win-buttons"
if "enter".isKeyDown() and input_message != "" (
  send = input_message
  spl = send.split(" ")
  if send.startsWith(".eval") (
    this.func = def() -> ()
    
    data = send.trim(7,-1)
    this.func.code = ("return " ++ data).oslCompile()
    
    async_msg data ++ " -> " ++ this.func() current_channel
    input_message = ""
    exit
  )
  if send.startsWith(".version") (
    async_msg "originCord v5.0" current_channel
    input_message = ""
    exit
  )
  if current_attachment == "" (
    if current_reply == "" (
      async_msg send current_channel
    ) else (
      link = "https://apps.mistium.com/discord-send-reply?token=" ++ token ++ "&channelid=" ++ current_channel ++ "&content=" ++ encodeURIComponent(send.toStr()) ++ "&messageid=" ++ current_reply.id ++ "&user_account=" ++ discord_isUser
      this.result = link.getAsync()
      current_reply = ""
    )
    if current_guild == "@me" (
      this.result = discord_dms.getKeys("id").index(current_channel)
      this.channel = discord_dms[this.result]
      discord_dms.delete(this.result)
      discord_dms.insert(1,this.channel)
    )
  ) else (
    send_file send current_channel current_attachment[3] current_attachment[2]
    current_attachment = ""
  )
  input_message = ""
)
