import "window_tools" as "wt"
wt:load_theme
// import the theme colours

proxy_url = "https://proxy.milosantos.com/cors.php?url="


domains = ["https://safebooru.org","https://rule34.xxx","https://gelbooru.org"]
domain = domains[1]


query_url = proxy_url ++ domain ++ "/autocomplete.php?q="
query_temp = ""
query_fetched = true
query_results = []
// setup the query variables

main_api = domain ++ "/index.php?page=dapi&s=post&q=index&limit=50&json=1"
main_tag = ""
main_temp = ""
main_fetched = true
main_results = []
// setup the main api


def aspectRatio(this.img) (
  return this.img.imageinfo("width") / this.img.imageinfo("height")
)

def "handleRequests" (
  handleLoadingTags
  handleSearch
)

def "handleLoadingTags" (
  if main_tag != main_temp (
    main_temp = main_tag
    main_fetched = false
  )
  
  if main_fetched.not (
    data = (proxy_url ++ encodeURIComponent(main_api ++ "&pid=0" ++ "&tags=" ++ encodeURIComponent(main_tag))).getAsync()
    if data != "loading" (
      main_fetched = true
      main_results = data.destr.JsonParse()
    )
  )
)

def "handleSearch" (
  if input_search != query_temp (
    query_temp = input_search
    query_fetched = false
    // run this when the search value is updated
  )

  if query_fetched.not (
    data = (query_url ++ query_temp).getAsync()
    // fetch the new search data
    if data != "loading" (
      query_fetched = true
      query_results = data.JsonParse()
      // update the results array
    )
  )
)

def "renderMain" (
  goto 0 window.top - 20
  square window.width 40 0 : c#prim
  loc 2 2 10 -20
  text "BooruClient" 10 : c#txtc
  
  this.divider = window.left + (window.width / 4)
  this.top = window.top - 50
  
  c prim
  frame window.left this.top this.divider window.bottom (
    renderSearch
  )
  
  c prim
  frame this.divider this.top window.right window.bottom main_results.len * 250 "list" (
    renderList
  )
)

def "renderSearch" (
  color prim
  this.w = frame.width - 20
  set_y frame.top - 25
  square this.w 30 10
  input this.w - 10 25 "search"
  // render the search bar

  change_y -40
  // offset the position of the search results down by 30 pixels
  each i item query_results (
    set_x 0
    square this.w 15 10 : c#prim hover_c#seco
    if onclick (
      main_tag = item.value
    )
    // render the background of a search result
    
    set_x frame.left + 10
    text item.label.trimText(this.w / 8) 8 : c#txtc
    // render the text os a search result
    
    change_y -28
    // go down by 25 pixels to render the next result
  )
)

def "renderImg" "this.w,this.url" (
  square this.w - 10 480 10 : c#prim
  if this.url.imageinfo("loaded") (
    w = this.w - 30 / (this.url.imageinfo("width") / 100)
    h = 45000 / this.url.imageinfo("height")
    
    image this.url (((h > w) ? w h) * 4.50)
    this.x = this.w / 2 - 20
    change this.x 225
    square 20 20 10 : c#prim hover_c#seco
    if onclick (
      clipboard "set" this.url
    )
    icon "copy" 0.8 : c#txtc
    change -this.x -225
  ) else (
    image this.url 0
    direction timer * 200
    icon "cutcircle 0 0 10 0 90" 2 : c#txtc
    direction 90
  )
)

def "renderList" (
  this.w = frame.width - 20 / 2
  set_y frame.top - 250 + scroll_ylist
  y = y_position
  ft = frame.top + 250
  fb = frame.bottom - 250
  lp = frame.left + (frame.width / 4)
  rp = frame.right - (frame.width / 4)
  i = 1
  loop main_results.len / 2 (
    if y < ft and y > fb (
      set_x lp
      renderImg this.w proxy_url ++ main_results[i].sample_url
      i ++
      
      set_x rp
      renderImg this.w proxy_url ++ main_results[i].sample_url
      i ++
    ) else (
      i += 2
    )
    y -= 500
    change_y -500
  )
)

mainloop:

renderMain
handleRequests

import "win-buttons"

